{"version":3,"sources":["../src/plugin/index.js"],"names":["hapiReactReduxPlugin","server","options","next","decorate","assert","realm","plugins","hapiReactRedux","settings","context","routes","Layout","layout","assets","config","createStore","pre","request","auth","store","serverContext","iso","location","raw","req","url","err","redirect","props","response","badImplementation","e","pathname","search","code","dispatch","getState","then","rootHtml","add","preloadedState","render","catch","wrap","notFound","handler","route","reply","hapiReactReduxRender","attributes","name","module","exports","register"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react'\nimport { renderToString } from 'react-dom/server'\nimport { match, RouterContext } from 'react-router'\nimport Iso from 'iso'\nimport Hoek from 'hoek'\nimport routeResovler from 'route-resolver'\nimport Boom from 'boom'\nimport { Provider } from 'react-redux'\n\nfunction hapiReactReduxPlugin(server, options, next) {\n\n  server.decorate('server', 'hapiReactRedux', function(options) {\n\n    Hoek.assert(options, 'Missing options')\n    this.realm.plugins.hapiReactRedux = this.realm.plugins.hapiReactRedux || {}\n    Hoek.assert(!this.realm.plugins.hapiReactRedux.settings, 'Cannot set hapiReactRedux settings more than once')\n    this.realm.plugins.hapiReactRedux.settings = options\n\n  })\n\n  server.decorate('reply', 'hapiReactReduxRender', function(context) {\n\n    const realm = this.realm.plugins.hapiReactRedux\n    Hoek.assert(realm.settings, 'Cannot render app without settings')\n\n    const routes = realm.settings.routes\n    const Layout = realm.settings.layout\n    const assets = realm.settings.assets\n    const config = realm.settings.config\n    // TODO: where does this go now?\n    const createStore = realm.settings.createStore\n    // any extra data\n    const pre = this.request.pre\n    // is there a user?\n    const auth = this.request.auth\n    const store = createStore({ auth, pre, config, serverContext: context })\n\n    const iso = new Iso()\n\n    match({ routes, location: this.request.raw.req.url }, (err, redirect, props) => {\n      if (err) {\n        return this.response(Boom.badImplementation(`There was a react router error rendering the route - ${this.request.raw.req.url}`, e))\n      } else if (redirect) {\n        this.redirect(redirect.pathname + redirect.search).code(301)\n      } else if (props) {\n        routeResovler(props, false, { dispatch: store.dispatch, getState: store.getState })\n          .then(() => {\n            let rootHtml = null\n            let layout = null\n            try {\n              rootHtml = renderToString(\n                <Provider store={store}>\n                  <RouterContext {...props} />\n                </Provider>\n              )\n            } catch (e) {\n              return this.response(Boom.badImplementation(`There was an error rendering the route - ${this.request.raw.req.url}`, e))\n            }\n            iso.add(rootHtml, {\n              preloadedState: store.getState()\n            })\n            try {\n              layout = renderToString(<Layout assets={assets} config={config} content={iso.render()} />)\n            } catch (e) {\n              return this.response(Boom.badImplementation(`There was an error rendering the layout while rendring the route - ${this.request.raw.req.url}`, e))\n            }\n            this.response(`<!doctype html>\\n${layout}`)\n          })\n          .catch((err) => {\n            return this.response(Boom.wrap(err))\n          })\n      } else {\n      // no errors, no redirect, we just didn't match anything\n        this.response(Boom.notFound(`Unable to find maching route for ${this.request.raw.req.url}`))\n      }\n    })\n\n  })\n\n  server.handler('hapiReactReduxHandler', function(route, options) {\n    return function(request, reply) {\n      reply.hapiReactReduxRender()\n    }\n  })\n\n  next()\n}\n\nhapiReactReduxPlugin.attributes = {\n  name: '@trunkclub/hapi-react-redux'\n}\n\nmodule.exports = {\n  register: hapiReactReduxPlugin\n}\n"]}