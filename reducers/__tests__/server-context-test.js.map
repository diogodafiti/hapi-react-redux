{"version":3,"sources":["../../src/reducers/__tests__/server-context-test.js"],"names":["describe","it","expect","trunks","id","toEqual","payload","feedbacks","comment","type"],"mappings":";;AAAA;;;;;;AAEAA,SAAS,wBAAT,EAAmC,YAAM;AACvCC,KAAG,qDAAH,EAA0D,YAAM;AAC9DC,WAAO,6BAAc;AACnBC,cAAQ;AACNC,YAAI;AADE;AADW,KAAd,EAIJ,EAJI,CAAP,EAKCC,OALD,CAKS;AACPF,cAAQ;AACNC,YAAI;AADE;AADD,KALT;AAUD,GAXD;;AAaAH,KAAG,kDAAH,EAAuD,YAAM;AAC3DC,WAAO,6BAAc;AACnBC,cAAQ;AACNC,YAAI;AADE;AADW,KAAd,EAIJ;AACDE,eAAS;AACPH,gBAAQ;AACNC,cAAI,GADE;AAENG,qBAAW,CACT;AACEH,gBAAI,GADN;AAEEI,qBAAS;AAFX,WADS;AAFL;AADD,OADR;AAYDC,YAAM;AAZL,KAJI,CAAP,EAkBCJ,OAlBD,CAkBS;AACPF,cAAQ;AACNC,YAAI,GADE;AAENG,mBAAW,CACT;AACEH,cAAI,GADN;AAEEI,mBAAS;AAFX,SADS;AAFL;AADD,KAlBT;AA6BD,GA9BD;AAgCD,CA9CD","file":"server-context-test.js","sourcesContent":["import serverContext from '../server-context'\n\ndescribe('server context reducer', () => {\n  it('will return default state if no action type matches', () => {\n    expect(serverContext({\n      trunks: {\n        id: 123\n      }\n    }, {}))\n    .toEqual({\n      trunks: {\n        id: 123\n      }\n    })\n  })\n\n  it('will set a new value if the action is dispatched', () => {\n    expect(serverContext({\n      trunks: {\n        id: 123\n      }\n    }, {\n      payload: {\n        trunks: {\n          id: 123,\n          feedbacks: [\n            {\n              id: 456,\n              comment: 'loved it'\n            }\n          ]\n        }\n      },\n      type: 'SET_SERVER_CONTEXT'\n    }))\n    .toEqual({\n      trunks: {\n        id: 123,\n        feedbacks: [\n          {\n            id: 456,\n            comment: 'loved it'\n          }\n        ]\n      }\n    })\n  })\n\n})\n"]}