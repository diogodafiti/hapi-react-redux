{"version":3,"sources":["../../src/reducers/__tests__/pre-test.js"],"names":["describe","it","expect","device","phone","toEqual","payload","iOS","type"],"mappings":";;AAAA;;;;;;AAEAA,SAAS,aAAT,EAAwB,YAAM;AAC5BC,KAAG,qDAAH,EAA0D,YAAM;AAC9DC,WAAO,mBAAI;AACTC,cAAQ,EAAEC,OAAO,IAAT;AADC,KAAJ,EAEJ,EAFI,CAAP,EAGCC,OAHD,CAGS;AACPF,cAAQ,EAAEC,OAAO,IAAT;AADD,KAHT;AAMD,GAPD;;AASAH,KAAG,kDAAH,EAAuD,YAAM;AAC3DC,WAAO,mBAAI;AACTC,cAAQ,EAAEC,OAAO,IAAT;AADC,KAAJ,EAEJ;AACDE,eAAS;AACPH,gBAAQ,EAAEC,OAAO,IAAT,EAAeG,KAAK,KAApB;AADD,OADR;AAIDC,YAAM;AAJL,KAFI,CAAP,EAQCH,OARD,CAQS;AACPF,cAAQ,EAAEC,OAAO,IAAT,EAAeG,KAAK,KAApB;AADD,KART;AAWD,GAZD;AAcD,CAxBD","file":"pre-test.js","sourcesContent":["import pre from '../pre'\n\ndescribe('pre reducer', () => {\n  it('will return default state if no action type matches', () => {\n    expect(pre({\n      device: { phone: true }\n    }, {}))\n    .toEqual({\n      device: { phone: true}\n    })\n  })\n\n  it('will set a new value if the action is dispatched', () => {\n    expect(pre({\n      device: { phone: true }\n    }, {\n      payload: {\n        device: { phone: true, iOS: false }\n      },\n      type: 'SET_PRE'\n    }))\n    .toEqual({\n      device: { phone: true, iOS: false }\n    })\n  })\n\n})\n"]}